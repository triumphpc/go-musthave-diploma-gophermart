// Code generated by mockery 2.9.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
	models "github.com/triumphpc/go-musthave-diploma-gophermart/internal/app/models"
)

// Subscriber is an autogenerated mock type for the Subscriber type
type Subscriber struct {
	mock.Mock
}

// Check provides a mock function with given fields: ctx, userOrder
func (_m *Subscriber) Check(ctx context.Context, userOrder models.Order) error {
	ret := _m.Called(ctx, userOrder)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, models.Order) error); ok {
		r0 = rf(ctx, userOrder)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Subscribe provides a mock function with given fields: ctx, input, workID
func (_m *Subscriber) Subscribe(ctx context.Context, input <-chan models.Order, workID int) func() error {
	ret := _m.Called(ctx, input, workID)

	var r0 func() error
	if rf, ok := ret.Get(0).(func(context.Context, <-chan models.Order, int) func() error); ok {
		r0 = rf(ctx, input, workID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(func() error)
		}
	}

	return r0
}
