// Code generated by mockery 2.9.0. DO NOT EDIT.

package mocks

import (
	broker "github.com/triumphpc/go-musthave-diploma-gophermart/internal/app/pkg/broker"

	context "context"

	mock "github.com/stretchr/testify/mock"

	models "github.com/triumphpc/go-musthave-diploma-gophermart/internal/app/models"
)

// Controller is an autogenerated mock type for the Controller type
type Controller struct {
	mock.Mock
}

// Check provides a mock function with given fields: ctx, usrOrd
func (_m *Controller) Check(ctx context.Context, usrOrd models.Order) error {
	ret := _m.Called(ctx, usrOrd)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, models.Order) error); ok {
		r0 = rf(ctx, usrOrd)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// PrepareTask provides a mock function with given fields: ctx, ord
func (_m *Controller) PrepareTask(ctx context.Context, ord models.Order) func() error {
	ret := _m.Called(ctx, ord)

	var r0 func() error
	if rf, ok := ret.Get(0).(func(context.Context, models.Order) func() error); ok {
		r0 = rf(ctx, ord)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(func() error)
		}
	}

	return r0
}

// Repeater provides a mock function with given fields: ctx, pub
func (_m *Controller) Repeater(ctx context.Context, pub broker.Publisher) error {
	ret := _m.Called(ctx, pub)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, broker.Publisher) error); ok {
		r0 = rf(ctx, pub)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// RunListeners provides a mock function with given fields: ctx, pub
func (_m *Controller) RunListeners(ctx context.Context, pub broker.Publisher) error {
	ret := _m.Called(ctx, pub)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, broker.Publisher) error); ok {
		r0 = rf(ctx, pub)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
